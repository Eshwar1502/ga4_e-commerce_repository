-- Gold / business table reports
-- top_traffic_source_medium
-- Table report analyzing which traffic_source_medium was responsible for the most value and volume.
-- Monthly aggregation of how often a traffic_source_medium is in a purchase with following KPIs:
-- Purchased value in USD.
-- Total number of purchased items.
-- Average number of purchased items per purchase.

config {
  type: "table",
  schema: "gold", 
  description: "Monthly aggregated report of purchase value and volume by traffic source medium."
}


SELECT
  -- Group by Year-Month for monthly aggregation
  FORMAT_DATE('%Y-%m', event_date) AS purchase_month,
  medium AS traffic_medium,
  
  -- 1. Purchased value in USD 
  SUM(transaction_revenue_usd) AS total_purchased_value_usd, 
  -- SUM(item_revenue_usd) AS total_purchased_value_usd,
  
  -- 2. Total number of purchased items 
  SUM(item_quantity) AS total_purchased_items,
  
  -- 3. Average number of purchased items per purchase (Accurate calculation now possible)
  CAST(
    SAFE_DIVIDE(
      SUM(item_quantity),
      COUNT(DISTINCT user_pseudo_id || CAST(ga_session_id AS STRING))
    ) AS INT64
  ) AS avg_items_per_purchase

FROM
  ${ref("silver_purchase_traffic_source_medium")}
GROUP BY 1, 2
ORDER BY 
  total_purchased_value_usd DESC



-- SELECT
--   -- Group by Year-Month for monthly aggregation
--   FORMAT_DATE('%Y-%m', event_date) AS purchase_month,
--   medium AS traffic_medium,
  
--   -- KPIs
--   SUM(event_value_in_usd) AS total_purchased_value_usd, -- Purchased value in USD
  
--   COUNT(DISTINCT user_pseudo_id || CAST(ga_session_id AS STRING)) AS total_purchases_items, --Total number of purchased events.
  
  
--   -- Since item count is not in silver, we can't calculate 'items'. Instead, we calculate Avg Value per Transaction.
--   SAFE_DIVIDE(SUM(event_value_in_usd), COUNT(DISTINCT user_pseudo_id || CAST(ga_session_id AS STRING))) AS avg_value_per_purchase_usd 

-- FROM
--   ${ref("silver_purchase_traffic_source_medium")}
-- GROUP BY 1, 2
-- ORDER BY 
--   total_purchased_value_usd DESC